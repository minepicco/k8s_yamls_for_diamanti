apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
  selector:
    app: grafana
    tier: frontend
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gf-pv-claim
  labels:
    app: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  creationTimestamp: null
  labels:
    volume: gf-pv
  name: gf-pv
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 20Gi
  flexVolume:
    driver: diamanti.com/volume
    fsType: ext4
    options:
      name: gf-pv
      perfTier: high
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: grafana
        tier: frontend
      annotations:
        diamanti.com/endpoint0: '{"network":"external-net","perfTier":"high"}'
        diamanti.com/endpoint1: '{"network":"internal-net","perfTier":"high"}'
    spec:
      containers:
      - image: minepicco/grafana:4.0beta
        name: grafana
        ports:
        - containerPort: 3000
          name: grafana
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: grafana-persistent-storage
        persistentVolumeClaim:
          claimName: gf-pv-claim
